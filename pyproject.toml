[project]
name = "Bot7685"
version = "0.1.0"
description = "Bot7685 by wyf7685"
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    # nonebot2
    "nonebot2[fastapi,httpx,websockets,aiohttp]>=2.4.2",
    # adapters
    "nonebot-adapter-discord>=0.1.8",
    "nonebot-adapter-feishu>=2.6.2",
    "nonebot-adapter-onebot>=2.4.6",
    "nonebot-adapter-qq>=1.6.2",
    "nonebot-adapter-satori>=0.13.4",
    "nonebot-adapter-telegram>=0.1.0b20",
    # plugins
    "nonebot-plugin-akinator>=1.0.1.post2",
    "nonebot-plugin-alconna>=0.57.6",
    "nonebot-plugin-apscheduler>=0.5.0",
    "nonebot-plugin-chatrecorder>=0.7.0",
    "nonebot-plugin-emojimix>=0.4.0",
    "nonebot-plugin-ghtiles>=0.1.4",
    "nonebot-plugin-htmlrender>=0.6.5",
    "nonebot-plugin-localstore>=0.7.4",
    "nonebot-plugin-orm[asyncpg,postgresql]>=0.7.7",
    "nonebot-plugin-picstatus>=2.1.2",
    "nonebot-plugin-skland>=0.2.1",
    # "nonebot-plugin-skland-arksign[sm-local]>=0.8.0",
    "nonebot-plugin-uninfo>=0.7.2",
    "nonebot-plugin-user>=0.5.0",
    "nonebot-plugin-waiter>=0.8.1",
    "nonebot-plugin-wakatime>=0.2.7",
    "nonebot-plugin-wordcloud>=0.9.0",
    # plugin deps
    "aiocache[redis]>=0.12.3",
    "alibabacloud-tea-openapi>=0.3.13",
    "anyio>=4.9.0",
    "async-lru>=2.0.5",
    "cos-python-sdk-v5>=1.9.36",
    "gunicorn>=23.0.0",
    "httpx>=0.28.1",
    "jmcomic>=2.5.38",
    "msgspec[toml,yaml]>=0.19.0",
    "paramiko>=3.5.0",
    "playwright==1.52.0", # pinned in docker/Dockerfile
    "pydantic>=2.11.4,<2.12",
    "tarina>=0.6.8",
    "tencentcloud-sdk-python-dnspod>=3.0.1354",
    # plugins
    "nonebot-plugin-exe-code @ git+https://github.com/wyf7685/nonebot-plugin-exe-code.git",
    "nonebot-plugin-werewolf @ git+https://github.com/wyf7685/nonebot-plugin-werewolf.git",
    "nonebot-plugin-zssm @ git+https://github.com/wyf7685/nonebot-plugin-zssm.git",
]

[dependency-groups]
dev = [
    "basedpyright>=1.24.0",
    "ipykernel>=6.29.5",
    "nonebot-plugin-orm[aiosqlite]>=0.7.7",
    "ruff>=0.9.3",
]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "UP",    # pyupgrade
    "RUF",   # Ruff-specific rules
    "ERA",   # eradicate
    "FLY",   # flynt
    "FURB",  # refurb
    "I",     # isort
    "N",     # PEP8-naming
    "PD",    # pandas-vet
    "PERF",  # Perflint
    "PGH",   # pygrep-hooks
    "TRY",   # tryceratops
    "ASYNC", # flake8-async
    "ANN",   # flake8-annotations
    "S",     # flake8-bandit
    "FBT",   # flake8-boolean-trap
    "A",     # flake8-builtins
    "B",     # flake8-bugbear
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "EM",    # flake8-errmsg
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SIM",   # flake8-simplify
    "SLOT",  # flake8-slots
    "TID",   # flake8-tidy-imports
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "TCH",   # flake8-type-checking
    "YTT",   # flake8-2020
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
    "ANN401", # any-type
    "TRY003", # raise-vanilla-args
    "TRY301", # raise-within-try
    "EM102",  # f-string-in-exception
    "COM812", # missing-trailing-comma
    "ERA001", # commented-out-code
    "EM101",  # raw-string-in-exception
    "TID252", # relative-imports
    "ISC001", # single-line-implicit-string-concatenation
    "DTZ005", # call-datetime-now-without-tzinfo
    "S311",   # suspicious-non-cryptographic-random-usage
    "PGH003", # blanket-type-ignore
    "N818",   # error-suffix-on-exception-name  # stupid
    "PYI041", # redundant-numeric-union  # int | float
    "S101",   # assert
    "B911",   # batched-without-explicit-strict
    "PGH004", # blanket-noqa
]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "dir"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["src", "tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
pythonVersion = "3.13"
pythonPlatform = "All"
typeCheckingMode = "recommended"
ignore = [".venv", "data"]                # nbp-orm stuff
reportShadowedImports = false
disableBytesTypePromotions = true
reportUnusedCallResult = false            # Receipt
reportUnknownVariableType = false         # Message/UniMessage
reportUnknownMemberType = false           # Message/UniMessage
reportUnknownArgumentType = false         # Message/UniMessage
reportImplicitStringConcatenation = false # Ruff ISC003
reportMissingTypeStubs = false            # third-party modules
reportMissingTypeArgument = false         # UniMessage
reportUnknownParameterType = false        # Message
reportAny = false                         # Alconna Args, ...
reportExplicitAny = false
